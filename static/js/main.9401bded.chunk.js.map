{"version":3,"sources":["common/Paginator/Paginator.module.css","api/profile-api.ts","redux/profile-reducer.ts","assets/images/preloader.svg","api/api.ts","redux/dialogs-reducer.ts","assets/images/user.jpg","components/Users/users.module.css","serviceWorker.js","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","components/Login/Login.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Setting/Setting.tsx","common/Paginator/Paginator.tsx","components/Users/User.tsx","redux/users-selectors.ts","components/Users/UsersSearchForm.tsx","utils/validators/object-helpers.ts","api/users-api.ts","redux/users-reducer.ts","components/Users/Users.tsx","components/Users/UsersContainer.tsx","hoc/withSuspense.tsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","redux/auth-selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","common/FormsControls/FormsControls.tsx","common/Preloader/Preloader.tsx","common/FormsControls/FormsControls.module.css","utils/validators/validators.ts"],"names":["module","exports","selektedPage","paginator","pageNumber","selectedPage","profileAPI","userId","instance","get","then","response","data","status","put","photoFile","formData","FormData","append","headers","Content-Type","profile","initialState","posts","id","message","likesCount","actions","addPostActionCreator","newPostText","type","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserProfile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","arguments","getStatus","_ref2","_callee2","_context2","_x2","updateStatus","_ref3","_callee3","_context3","resultCode","_x3","savePhoto","file","_ref4","_callee4","_context4","_x4","saveProfile","_ref5","_callee5","getState","_context5","auth","Error","stopSubmit","_error","messages","abrupt","Promise","reject","_x5","_x6","profileReducer","state","length","undefined","action","newPost","objectSpread","concat","toConsumableArray","filter","p","__webpack_require__","d","__webpack_exports__","ResultCodesEnum","ResultCodeForCaptcha","axios__WEBPACK_IMPORTED_MODULE_0__","n","Axios","create","baseURL","withCredentials","API-KEY","dialogs","name","sendMessage","newMessageBody","dialogsReducer","body","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","userPhoto","Boolean","window","location","hostname","match","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","login","isAuth","captchaUrl","payload","getAuthUserData","meData","_meData$data","_login","Success","getCaptchaUrl","url","authReducer","LoginReduxForm","reduxForm","form","handleSubmit","error","react_default","createElement","onSubmit","createField","required","Input","src","className","style","formSummaryError","LoginPage","props","useSelector","useDispatch","react_router","to","loginData","CaptchaIsRequired","Music","News","Setting","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","disabled","onClick","map","cn","defineProperty","key","e","User","user","followingProgress","follow","unfollow","react_router_dom","small","followed","some","getUsers","createSelector","usersPage","users","u","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingProgress","getUsersFilter","usersSearchFormValidate","values","UsersSearchForm","React","memo","formik_esm","enableReinitialize","initialValues","term","friend","String","validate","setSubmitting","onFilterChange","isSubmitting","as","value","updateObjectInArray","items","itemId","objPropName","newObjProps","usersAPI","count","requestUsers","page","Response","totalCount","usersReducer","Users","history","useHistory","useEffect","parsed","queryString","search","substr","actualPage","actualFilter","Number","query","pathname","common_Paginator_Paginator","Users_User","UserPage","Fragment","pageTitle","Preloader","Users_Users","withSuspense","WrappedComponent","Suspense","fallback","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store","selectIsAuth","selectCurrentUsersLogin","Header","Layout","position","zIndex","width","menu","theme","mode","defaultSelectedKeys","row","col","span","fontSize","avatar","size","icon","UserOutlined","color","es_button","ProfileContainer","lazy","bind","DialogsContainer","Content","Footer","Sider","SuspendedDialogs","SuspendedProfile","SuspendedMusic","SuspendedNews","SuspendedSetting","App","captchAllUnhandledErrors","alert","initializeApp","addEventListener","removeEventListener","layout","Header_Header","padding","overflow","height","left","top","defaultOpenKeys","Item","MessageOutlined","TeamOutlined","AreaChartOutlined","SoundOutlined","SettingOutlined","minHeight","marginLeft","path","render","UsersContainer","textAlign","Component","AppContainer","withRouter","connect","MainApp","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","_ref$meta","meta","touched","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","formControl","Textarea","input","restProps","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","preloader","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.9401bded.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selektedPage\":\"Paginator_selektedPage__3T1uQ\",\"paginator\":\"Paginator_paginator__FnFQ7\",\"pageNumber\":\"Paginator_pageNumber__2fD43\",\"selectedPage\":\"Paginator_selectedPage__1Ya8H\"};","import {PhotosType, ProfileType} from \"../types/types\";\r\nimport {instance, APIResponseType} from \"./api\";\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(response => response.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(response => response.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status}).then(response => response.data)\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multypart/form-data'\r\n            }\r\n        }).then(response => response.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(response => response.data)\r\n    }\r\n}\r\n","import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport {BaseThunkType, InferActionsType} from \"./redux-store\";\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsType<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Blabla', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'SN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state, posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET_USERS_PROFILE': {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET_STATUS': {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        case 'SN/PROFILE/DELETE_POST': {\r\n            return {\r\n                ...state, posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS': {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_USERS_PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status} as const),\r\n    deletePost: (postId: number) => ({type: 'SN/PROFILE/DELETE_POST', postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const)\r\n}\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setUserProfile(data))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const data = await profileAPI.saveProfile(profile)\r\n    const userId = getState().auth.userId\r\n    if (data.resultCode === 0) {\r\n        if (userId != null) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            throw new Error(\"userId can't be null \")\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0]}));\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.0171b6bb.svg\";","import Axios from \"axios\"\r\nimport {UserType} from \"../types/types\";\r\n\r\nexport const instance = Axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"0a4d5e42-bfac-4525-abce-dd128f2c8444\"}\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n\r\n}\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    resultCode: RC\r\n    messages: Array<string>\r\n}\r\n","import {InferActionsType} from \"./redux-store\";\r\n\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sanek'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Zayats'},\r\n        {id: 4, name: 'Valera'}\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Bla Bla Bla'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'}\r\n    ] as Array<MessagesType>\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsType<typeof actions>\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/DIALOGS/SEND_MESSAGE': {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state, messages: [...state.messages, {id: 5, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    sendMessage: (newMessageBody: string) => ({type: 'SN/DIALOGS/SEND_MESSAGE', newMessageBody})\r\n}\r\n\r\nexport default dialogsReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/user.6017f956.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1yK0B\",\"selektedPage\":\"users_selektedPage__2hehA\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {instance, APIResponseType, ResultCodeForCaptcha, ResultCodesEnum} from \"./api\";\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptcha>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n","import {instance} from \"./api\";\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(response => response.data)\r\n    }\r\n}\r\n","import {ResultCodeForCaptcha, ResultCodesEnum} from \"../api/api\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\nimport {BaseThunkType, InferActionsType} from \"./redux-store\";\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/AUTH/SET_USER_DATA':\r\n        case 'SN/AUTH/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'SN/AUTH/SET_USER_DATA', payload:\r\n            {userId, email, login, isAuth}\r\n    } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'SN/AUTH/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}\r\n    } as const)\r\n\r\n}\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me()\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data\r\n        dispatch(actions.setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    let loginData = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (loginData.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (loginData.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = loginData.messages[0];\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    let data = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = data.url;\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsType<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect, useSelector, useDispatch} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {createField, Input, GetStringKeys} from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps>\r\n    = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesTypeKeys>(\"Email\", 'email', [required], Input)}\r\n            {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl} />}\r\n            { captchaUrl &&  createField<LoginFormValuesTypeKeys>(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\n\r\nexport type LoginFormValuesType = {\r\n    captcha: string\r\n    rememberMe: boolean\r\n    password: string\r\n    email: string\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\r\n\r\nexport const LoginPage: React.FC = (props) => {\r\n    \r\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    </div>\r\n}","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\ntype PropsType = {\r\n    \r\n}\r\n\r\nconst Music: React.FC<PropsType> = () => {\r\n    return(\r\n    <div>\r\n        Music\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nconst News: React.FC<PropsType> = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Setting.module.css'\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nconst Setting: React.FC<PropsType> = () => {\r\n    return (\r\n        <div>\r\n            Setting\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 20}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        <button disabled={portionNumber === 1} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\r\n            return <span className={cn({\r\n                [styles.selectedPage]: currentPage === p},\r\n                styles.pageNumber)\r\n            }\r\n                key={p} onClick={(e) => { onPageChanged(p) }}>{p}</span>\r\n        })}\r\n        {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserType } from '../../types/types';\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({ user, followingProgress, follow, unfollow }) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }}>Unfollow</button>\r\n                    : <button disabled={followingProgress.some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id)\r\n                    }}>Follow</button>\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{\"u.location.country\"}</div>\r\n                <div>{\"u.location.city\"}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\n\r\nexport default User;\r\n","import { createSelector } from \"reselect\"\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter\r\n}","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { FilterType } from \"../../redux/users-reducer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUsersFilter } from \"../../redux/users-selectors\";\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype PropsType = {\r\n  onFilterChange: (filter: FilterType) => void;\r\n}\r\n\r\ntype FormType = {\r\n    term: string,\r\n    friend: 'null' | 'true' | 'false'\r\n}\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n  const errors = {};\r\n  return errors;\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n  const filter = useSelector(getUsersFilter)\r\n  const submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n      const filter: FilterType = {\r\n        term: values.term,\r\n        friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n      } \r\n      props.onFilterChange(filter)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n        validate={usersSearchFormValidate}\r\n        onSubmit={submit}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <Field name='friend' as='select'>\r\n                <option value='null'>All</option>\r\n                <option value='true'>Only followed</option>\r\n                <option value='false'>Only unfollowed</option>\r\n            </Field>  \r\n            <Field type=\"text\" name=\"term\" />\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Find\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n})\r\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {GetItemsType, instance, APIResponseType} from \"./api\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string = '', friend: null | boolean = null ) {\r\n        return instance.get<GetItemsType>(\r\n            `users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`) )\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data) as Promise<APIResponseType>\r\n    },\r\n}\r\n","import { APIResponseType } from './../api/api';\r\nimport {updateObjectInArray} from \"../utils/validators/object-helpers\";\r\nimport {UserType} from \"../types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, BaseThunkType, InferActionsType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/users-api\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 50,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingProgress: [] as Array<number>,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionsType<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionTypes>\r\nexport type FilterType = typeof initialState.filter\r\n\r\nconst usersReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id != action.userId)\r\n            }\r\n\r\n        case 'SN/USERS/SET_FILTER':\r\n            return {...state, filter: action.payload}\r\n\r\n        case 'SN/USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n\r\n        case 'SN/USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT':\r\n            return {...state, totalUsersCount: action.count}\r\n\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setFilter: (filter: FilterType) => ({type: 'SN/USERS/SET_FILTER', payload: filter} as const),\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setCurrentPage(page));\r\n        dispatch(actions.setFilter(filter))\r\n\r\n        let Response = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(Response.data.items));\r\n        dispatch(actions.setTotalUsersCount(Response.data.totalCount));\r\n    }\r\n}\r\n\r\nexport const followUnfollowFlow = async (userId: number, dispatch: Dispatch<ActionTypes>, \r\n                                        apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                         actionCreator: (userId: number) => ActionTypes) => {\r\n    dispatch(actions.toggleIsFollowingProgress(true, userId));\r\n    let Response = await apiMethod(userId);\r\n    if (Response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(actions.toggleIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(userId), actions.followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: any): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(userId), actions.unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import React, { useEffect } from \"react\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport { UsersSearchForm } from \"./UsersSearchForm\";\r\nimport { FilterType, requestUsers } from \"../../redux/users-reducer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTotalUsersCount, getCurrentPage, getPageSize, getUsersFilter, getUsers, getFollowingProgress } from \"../../redux/users-selectors\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as queryString from 'query-string'\r\n\r\n\r\ntype PropsType = {};\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\r\n\r\n\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n  const users = useSelector(getUsers)\r\n  const totalUsersCount = useSelector(getTotalUsersCount)\r\n  const currentPage = useSelector(getCurrentPage)\r\n  const pageSize = useSelector(getPageSize)\r\n  const filter = useSelector(getUsersFilter)\r\n  const followingProgress = useSelector(getFollowingProgress)\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n    let actualPage = currentPage\r\n    let actualFilter = filter\r\n\r\n    if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n\r\n    if (!!parsed.term) actualFilter = { ...actualFilter, term: parsed.term as string }\r\n\r\n    switch (parsed.friend) {\r\n      case \"null\":\r\n        actualFilter = { ...actualFilter, friend: null }\r\n        break;\r\n      case \"true\":\r\n        actualFilter = { ...actualFilter, friend: true }\r\n        break;\r\n      case \"false\":\r\n        actualFilter = { ...actualFilter, friend: false }\r\n        break;\r\n    }\r\n\r\n    dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const query: QueryParamsType = {}\r\n\r\n    if (!!filter.term) query.term = filter.term\r\n    if (filter.friend !== null) query.friend = String(filter.friend)\r\n    if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n    history.push({\r\n      pathname: '/users',\r\n      search: queryString.stringify(query)\r\n    })\r\n  }, [filter, currentPage])\r\n\r\n  useEffect(() => {\r\n    dispatch(requestUsers(currentPage, pageSize, filter))\r\n  }, [])\r\n\r\n  const onPageChanged = (pageNumber: number) => {\r\n    dispatch(requestUsers(pageNumber, pageSize, filter))\r\n  }\r\n\r\n  const onFilterChange = (filter: FilterType) => {\r\n    dispatch(requestUsers(1, pageSize, filter))\r\n  }\r\n\r\n  const follow = (userId: number) => {\r\n    dispatch(follow(userId));\r\n  }\r\n\r\n  const unfollow = (userId: number) => {\r\n    dispatch(unfollow(userId))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <UsersSearchForm onFilterChange={onFilterChange} />\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n        onPageChanged={onPageChanged}\r\n      />\r\n      {users.map((u) => (\r\n        <User\r\n          user={u}\r\n          followingProgress={followingProgress}\r\n          key={u.id}\r\n          unfollow={unfollow}\r\n          follow={follow}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {Users} from './Users';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { getIsFetching } from '../../redux/users-selectors'\r\n\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    pageTitle: string\r\n    \r\n}\r\n\r\nconst UserPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    return <>\r\n            <h2>{props.pageTitle}</h2>\r\n            {isFetching ? <Preloader /> : null }\r\n             <Users />\r\n\r\n        </>\r\n}\r\n\r\nexport default UserPage","import React from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nexport function withSuspense <WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <WrappedComponent {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import {getAuthUserData} from \"./auth-reducer\";\r\nimport {InferActionsType} from \"./redux-store\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionsType = InferActionsType<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED_SUCCESS' as const})\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => dispatch(actions.initializedSuccess()))\r\n}\r\n\r\nexport default appReducer;\r\n","export type InitialStateType = typeof initialState\r\n\r\nlet initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType =>{\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","import {createStore, combineReducers, applyMiddleware, compose, Action} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport {keys} from \"@material-ui/core/styles/createBreakpoints\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type InferActionsType<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// @ts-ignore\r\nwindow._store = store;\r\n\r\nexport default store;\r\n","import { AppStateType } from \"./redux-store\";\r\n\r\nexport const selectIsAuth = (state: AppStateType ) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const selectCurrentUsersLogin = (state: AppStateType) => {\r\n    return state.auth.login\r\n}","import {Avatar, Button, Col, Layout, Menu, Row} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {selectCurrentUsersLogin, selectIsAuth} from '../../redux/auth-selectors';\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nexport type MapPropsType = {}\r\n\r\nexport const Header: React.FC<MapPropsType> = (props) => {\r\n\r\n    const {Header} = Layout;\r\n\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const login = useSelector(selectCurrentUsersLogin)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <Header className=\"header\" style={{\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n            width: '100%'\r\n        }} >\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}\r\n                  style={{\r\n                      position: 'fixed',\r\n                      zIndex: 1,\r\n                      width: '90%'\r\n                  }}>\r\n\r\n                <Row>\r\n                    <Col span={17} style={{fontSize: 25}} >\r\n                        SOCIAL NETWORK\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Avatar size=\"large\" icon={<UserOutlined/>}/>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        {isAuth ? <div style={{color: 'white'}}> {login+'    '}\r\n                                <Button color=\"inherit\" onClick={logoutCallback}>Logout</Button>\r\n                            </div>\r\n                            : <Button color=\"inherit\"><NavLink to='/login'>LOGIN</NavLink></Button>}\r\n                    </Col>\r\n                </Row>\r\n            </Menu>\r\n\r\n        </Header>\r\n    )\r\n}","import { AreaChartOutlined, MessageOutlined, SettingOutlined, SoundOutlined, TeamOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Breadcrumb, Layout, Menu } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport React, { Component } from 'react';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { BrowserRouter, NavLink, Redirect, Route, withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport './App.css';\r\nimport Preloader from './common/Preloader/Preloader';\r\nimport { LoginPage } from './components/Login/Login';\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport Setting from \"./components/Setting/Setting\";\r\nimport UserPage from './components/Users/UsersContainer';\r\nimport { withSuspense } from './hoc/withSuspense';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport store, { AppStateType } from \"./redux/redux-store\";\r\nimport {Header} from \"./components/Header/Header\";\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\nconst SuspendedDialogs = withSuspense(DialogsContainer)\r\nconst SuspendedProfile = withSuspense(ProfileContainer)\r\nconst SuspendedMusic = withSuspense(Music)\r\nconst SuspendedNews = withSuspense(News)\r\nconst SuspendedSetting = withSuspense(Setting)\r\n\r\nclass App extends Component<MapPropsType & DispatchPropsType> {\r\n    captchAllUnhandledErrors = () => {\r\n        alert(\"Some error occured\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.captchAllUnhandledErrors);\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.captchAllUnhandledErrors);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n\r\n            <Layout>\r\n                <Header />\r\n                <Content style={{ padding: '50px 50px'}}>\r\n                    <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\r\n                        <Sider className=\"site-layout-background\" width={200}\r\n                            style={{\r\n                                overflow: 'auto',\r\n                                height: '100vh',\r\n                                position: 'fixed',\r\n                                left: 25,\r\n                                top: 75\r\n                            }}>\r\n                            <Menu\r\n                                theme=\"dark\"\r\n                                mode=\"inline\"\r\n                                defaultSelectedKeys={['1']}\r\n                                defaultOpenKeys={['sub1']}\r\n                                style={{ height: '100%' }}\r\n                            >\r\n                                <Menu.Item key=\"1\" icon={<UserOutlined />}><NavLink to=\"/Profile\" > Profile</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"2\" icon={<MessageOutlined />}><NavLink to=\"/Dialogs\" > Messages</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"3\" icon={<TeamOutlined />}><NavLink to=\"/Users\" > Users</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"4\" icon={<AreaChartOutlined />}><NavLink to=\"/News\" > News</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"5\" icon={<SoundOutlined />}><NavLink to=\"/Music\" > Music</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"6\" icon={<SettingOutlined />}><NavLink to=\"/Setting\" > Setting</NavLink></Menu.Item>\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Content style={{ padding: '0 24px', minHeight: 280, marginLeft: 200 }}>\r\n                            <Route path='/'\r\n                                render={() => <Redirect to={\"/profile\"} />} />\r\n                            <Route path='/login'\r\n                                render={withSuspense(LoginPage)} />\r\n                            <Route path='/dialogs'\r\n                                render={() => <SuspendedDialogs />} />\r\n                            <Route path='/profile/:userId?'\r\n                                render={() => <SuspendedProfile />} />\r\n                            <Route path='/users'\r\n                                render={() => <UserPage pageTitle='Users' />} />\r\n                            <Route path='/music' render={SuspendedMusic} />\r\n                            <Route path='/news' render={SuspendedNews} />\r\n                            <Route path='/setting' render={SuspendedSetting} />\r\n\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Social Network ©2020 Created by Artsem Kez</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp })\r\n)(App);\r\n\r\nlet MainApp: React.FC = () => {\r\n    return <BrowserRouter >\r\n        < Provider store={store} >\r\n            <AppContainer />\r\n        </Provider >\r\n    </BrowserRouter >\r\n}\r\n\r\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\n\r\n\r\n    ReactDOM.render(\r\n        <MainApp /> , document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field, WrappedFieldProps} from \"redux-form\"\r\nimport {WrappedFieldMetaProps} from 'redux-form/lib/Field'\r\nimport { FieldValidatorType } from \"../../utils/validators/validators\"\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                            name: FormKeysType,\r\n                            validators: Array<FieldValidatorType>,\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {}, text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n\r\nexport type GetStringKeys<T> = Extract<keyof T, string>","import preloader from '../../assets/images/preloader.svg';\r\nimport React from 'react';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nlet Preloader: React.FC<PropsType> = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1DCiA\",\"error\":\"FormsControls_error__34F1X\",\"formSummaryError\":\"FormsControls_formSummaryError__2Uj3p\"};","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if(value) return undefined;\r\n    return \"Field as requaired\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} simbols`;\r\n    return undefined;\r\n}\r\n"],"sourceRoot":""}