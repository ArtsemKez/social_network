{"version":3,"sources":["common/FormsControls/FormsControls.module.css","common/FormsControls/FormsControls.js","utils/validators/validators.js","hoc/withAuthRedirect.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/user.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","formControl","error","formSammaryError","FormControl","_ref","input","meta","props","child","Object","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","ErrorText","touched","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","children","Textarea","restProps","assign","Input","createField","placeholder","component","name","validators","type","text","arguments","length","undefined","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","__webpack_require__","d","__webpack_exports__","required","maxLengthCreater","value","maxLength","concat","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_Dev_Projects_social_network_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","p","DescriptionBlock","contacts","PostsBlock","posts","item","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","onClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","objectWithoutProperties","onSubmit","style","keys","profile","map","s","ProfileData","goToEditMode","Fragment","isOwner","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contacts","contactTitle","contactVelue","Contacts","_ref2","ProfileInfo","src","photos","large","userPhoto","target","files","savePhoto","ProfileInfo_ProfileStatus","ProfileInfo_ProfileDataForm","initialValues","formData","saveProfile","then","ProfileInfo_ProfileData","Preloader","Post","message","likesCoint","MyPosts","memo","postsElements","toConsumableArray","reverse","MyPosts_Post_Post","id","likesCount","postsBlock","PostsReduxForm","addPost","newPostText","maxLength10","Field","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","match","params","authUserId","history","getUserProfile","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","compose","getStatus","withRouter"],"mappings":"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","file":"static/js/4.06d742e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1DCiA\",\"error\":\"FormsControls_error__34F1X\",\"formSammaryError\":\"FormsControls_formSammaryError__2XN1r\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const ErrorText = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (ErrorText ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {ErrorText && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input  {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, component, name, validators, type, text=\"\", props={}) => (\r\n    <div>\r\n        <Field placeholder={placeholder} component={component} name={name} validate={validators} type={type} \r\n        {...props}  />{text}\r\n    </div>\r\n)","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return \"Field as requaired\"\r\n}\r\n\r\nexport const maxLengthCreater = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} simbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) { return <Redirect to={\"/login\"} /> }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","module.exports = __webpack_public_path__ + \"static/media/user.6017f956.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DescriptionBlock\":\"ProfileInfo_DescriptionBlock__Glmio\",\"contacts\":\"ProfileInfo_contacts__AVYRz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostsBlock\":\"MyPosts_PostsBlock__YCzvk\",\"posts\":\"MyPosts_posts__2EbPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__96ZNP\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status</b><span onClick={activateEditMode} >{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport { Contacts } from './ProfileInfo';\r\nimport { createField, Input, Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst ProfileDataForm = ({error, handleSubmit, ...props }) => {\r\n  return <form onSubmit={handleSubmit} >\r\n    <div><button >Save</button></div>\r\n    {error && <div className={style.formSammaryError}>\r\n            {error}\r\n        </div>}\r\n    <div>\r\n      <b>Full Name</b>: {createField(\"Full Name\", Input, \"fullName\")}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {createField([], Input, \"lookingForAJob\", [], \"checkbox\")}\r\n    </div>\r\n    <div>\r\n      <b>My professional skills</b>: {createField(\"My professional skills\", Textarea, \"lookingForAJobDescription\")}\r\n    </div>\r\n    <div>\r\n      <b>About me</b>: {createField(\"About Me\", Textarea, \"aboutMe\")}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n        return <div key={key} className={s.contacts} >\r\n          <b>{key}: {createField(key, Input, \"contacts.\"+key)} </b>\r\n        </div>\r\n      })}\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(\r\n      () => { setEditMode(false) }\r\n    )\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  if (!props.profile) { return <Preloader /> }\r\n  return <div className=\"content\">\r\n    <div className={s.DescriptionBlock} >\r\n      <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} />\r\n      {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n      <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n      {editMode\r\n        ? <ProfileDataFormReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\r\n        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={props.profile} isOwner={props.isOwner} />}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst ProfileData = ({ goToEditMode, ...props }) => {\r\n  return <>\r\n    {props.isOwner && <div><button onClick={goToEditMode} >Edit</button></div>}\r\n    <>\r\n      <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n    </>\r\n    {props.profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div>\r\n      <b>About me</b>: {props.profile.aboutMe}\r\n    </div>\r\n    <>\r\n      <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n        return <Contacts key={key} contactTitle={key} contactVelue={props.profile.contacts[key]} />\r\n      })}\r\n    </>\r\n  </>\r\n}\r\n\r\nexport const Contacts = ({ contactTitle, contactVelue }) => {\r\n  return <div className={s.contacts} >\r\n    <b>{contactTitle}</b>: {contactVelue}\r\n  </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n          <img src='https://avatars.mds.yandex.net/get-pdb/1679414/4552ff24-f27b-4f50-b0ad-8b1a7843aaba/s1200'/>\r\n        { props.message }\r\n        <div>\r\n          <span>Like</span> {props.likesCoint}\r\n        </div>\r\n      </div>\r\n    </div>)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {  required, maxLengthCreater } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo ((props) => {\r\n  let postsElements = \r\n  [...props.posts].reverse().map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />);\r\n\r\n  const onAddPost = (value) => {\r\n    props.addPost(value.newPostText);\r\n} \r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <PostsReduxForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreater(10);\r\n\r\nconst AddPostFormRedux = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'newPostText'} placeholder='Enter new massage'\r\n        validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst PostsReduxForm = reduxForm ({form: 'AddPostFormRedux'})(AddPostFormRedux)\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return <div>\r\n    <ProfileInfo profile={props.profile} status={props.status}\r\n      updateStatus={props.updateStatus} isOwner={props.isOwner} \r\n      savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\r\n    <MyPostsContainer />\r\n  </div>\r\n\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer'\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n      userId = this.props.authUserId\r\n      if(!userId){\r\n        userId = this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    if(this.props.match.params.userId != prevProps.match.params.userId){\r\n    this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n      profile={this.props.profile} status={this.props.status}\r\n      updateStatus={this.props.updateStatus} savePhoto={this.props.savePhoto}\r\n      saveProfile={this.props.saveProfile} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authUserId: state.auth.userId,\r\n})\r\n\r\nexport default compose(\r\n  connect (mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}