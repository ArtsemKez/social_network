{"version":3,"sources":["common/FormsControls/FormsControls.module.css","utils/validators/validators.js","common/FormsControls/FormsControls.js","components/Login/Login.jsx"],"names":["module","exports","formControl","error","formSammaryError","__webpack_require__","d","__webpack_exports__","required","maxLengthCreater","value","maxLength","length","concat","FormControl","_ref","input","meta","props","child","Object","W_Projects_social_network_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","ErrorText","touched","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","children","Textarea","restProps","assign","Input","createField","placeholder","component","name","validators","type","text","arguments","undefined","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","_common_FormsControls_FormsControls__WEBPACK_IMPORTED_MODULE_2__","_utils_validators_validators__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_4__","_redux_auth_reducer__WEBPACK_IMPORTED_MODULE_5__","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_7__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_7___default","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","style","connect","state","isAuth","auth","login","to","formData","email","password","rememberMy"],"mappings":"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","file":"static/js/7.f1164d0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3da9S\",\"error\":\"FormsControls_error__dwL8B\",\"formSammaryError\":\"FormsControls_formSammaryError__2msK4\"};","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return \"Field as requaired\"\r\n}\r\n\r\nexport const maxLengthCreater = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} simbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const ErrorText = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (ErrorText ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {ErrorText && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input  {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, component, name, validators, type, text=\"\", props={}) => (\r\n    <div>\r\n        <Field placeholder={placeholder} component={component} name={name} validate={validators} type={type} \r\n        {...props}  />{text}\r\n    </div>\r\n)","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { Input, createField } from '../../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit} >\r\n            {createField(\"Email\", Input, 'email', [required])}\r\n            {createField(\"Password\", Input, 'password', [required], 'password')}\r\n            {createField(null, Input, 'rememberMy', null, \"checkbox\", \"Remember Me\")}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n        {error && <div className={style.formSammaryError}>\r\n            {error}\r\n        </div>}\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm ({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMy);\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={\"/Profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect (mapStateToProps, {login})(Login)"],"sourceRoot":""}